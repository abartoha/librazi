-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.audit_log (
  log_id bigint NOT NULL DEFAULT nextval('audit_log_log_id_seq'::regclass),
  table_name character varying NOT NULL,
  record_id bigint NOT NULL,
  action USER-DEFINED NOT NULL,
  old_values jsonb,
  new_values jsonb,
  changed_by bigint,
  changed_at timestamp with time zone DEFAULT now(),
  ip_address inet,
  user_agent text,
  session_id character varying,
  CONSTRAINT audit_log_pkey PRIMARY KEY (log_id),
  CONSTRAINT audit_log_changed_by_fkey FOREIGN KEY (changed_by) REFERENCES public.staff(staff_id)
);
CREATE TABLE public.book_copies (
  copy_id bigint NOT NULL DEFAULT nextval('book_copies_copy_id_seq'::regclass),
  book_id bigint NOT NULL,
  copy_number character varying NOT NULL,
  barcode character varying UNIQUE,
  rfid_tag character varying UNIQUE,
  acquisition_date date NOT NULL DEFAULT CURRENT_DATE,
  acquisition_cost numeric CHECK (acquisition_cost >= 0::numeric),
  acquisition_source character varying,
  current_condition USER-DEFINED DEFAULT 'excellent'::copy_condition,
  status USER-DEFINED DEFAULT 'available'::copy_status,
  location_code character varying,
  internal_notes text,
  last_condition_check date DEFAULT CURRENT_DATE,
  total_loans integer DEFAULT 0 CHECK (total_loans >= 0),
  total_damage_cost numeric DEFAULT 0.00 CHECK (total_damage_cost >= 0::numeric),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by bigint,
  CONSTRAINT book_copies_pkey PRIMARY KEY (copy_id),
  CONSTRAINT book_copies_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id),
  CONSTRAINT book_copies_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.staff(staff_id)
);
CREATE TABLE public.books (
  book_id bigint NOT NULL DEFAULT nextval('books_book_id_seq'::regclass),
  title character varying NOT NULL,
  subtitle character varying,
  author character varying NOT NULL,
  co_authors ARRAY,
  isbn character varying UNIQUE,
  isbn13 character varying,
  publication_year integer CHECK (publication_year > 1000 AND publication_year::numeric <= (EXTRACT(year FROM CURRENT_DATE) + 1::numeric)),
  publisher character varying,
  edition character varying,
  pages integer CHECK (pages > 0),
  language character varying DEFAULT 'English'::character varying,
  genre character varying,
  subgenre character varying,
  dewey_decimal character varying,
  lcc character varying,
  description text,
  keywords ARRAY,
  cover_image_url text,
  purchase_price numeric CHECK (purchase_price >= 0::numeric),
  replacement_cost numeric CHECK (replacement_cost >= 0::numeric),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by bigint,
  search_vector tsvector,
  CONSTRAINT books_pkey PRIMARY KEY (book_id),
  CONSTRAINT books_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.staff(staff_id)
);
CREATE TABLE public.damage_types (
  damage_type_id bigint NOT NULL DEFAULT nextval('damage_types_damage_type_id_seq'::regclass),
  type_name character varying NOT NULL UNIQUE,
  description text,
  default_repair_cost numeric DEFAULT 0.00,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT damage_types_pkey PRIMARY KEY (damage_type_id)
);
CREATE TABLE public.damages (
  damage_id bigint NOT NULL DEFAULT nextval('damages_damage_id_seq'::regclass),
  copy_id bigint NOT NULL,
  damage_type_id bigint NOT NULL,
  severity USER-DEFINED NOT NULL,
  damage_date date NOT NULL DEFAULT CURRENT_DATE,
  discovered_by bigint,
  description text NOT NULL,
  location_on_book text,
  estimated_repair_cost numeric CHECK (estimated_repair_cost >= 0::numeric),
  actual_repair_cost numeric CHECK (actual_repair_cost >= 0::numeric),
  repair_status USER-DEFINED DEFAULT 'pending'::repair_status,
  repair_date date,
  repaired_by bigint,
  repair_notes text,
  caused_by_loan_id bigint,
  damage_photos ARRAY,
  is_member_liable boolean DEFAULT false,
  member_notified boolean DEFAULT false,
  insurance_claim_number character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT damages_pkey PRIMARY KEY (damage_id),
  CONSTRAINT damages_damage_type_id_fkey FOREIGN KEY (damage_type_id) REFERENCES public.damage_types(damage_type_id),
  CONSTRAINT damages_copy_id_fkey FOREIGN KEY (copy_id) REFERENCES public.book_copies(copy_id),
  CONSTRAINT damages_repaired_by_fkey FOREIGN KEY (repaired_by) REFERENCES public.staff(staff_id),
  CONSTRAINT damages_discovered_by_fkey FOREIGN KEY (discovered_by) REFERENCES public.staff(staff_id),
  CONSTRAINT damages_caused_by_loan_id_fkey FOREIGN KEY (caused_by_loan_id) REFERENCES public.loans(loan_id)
);
CREATE TABLE public.fines (
  fine_id bigint NOT NULL DEFAULT nextval('fines_fine_id_seq'::regclass),
  loan_id bigint,
  damage_id bigint,
  member_id bigint NOT NULL,
  fine_type character varying NOT NULL CHECK (fine_type::text = ANY (ARRAY['overdue'::character varying, 'damage'::character varying, 'lost_book'::character varying, 'processing'::character varying, 'other'::character varying]::text[])),
  amount numeric NOT NULL CHECK (amount >= 0::numeric),
  daily_rate numeric DEFAULT 0.20 CHECK (daily_rate >= 0::numeric),
  days_calculated integer DEFAULT 0 CHECK (days_calculated >= 0),
  fine_status USER-DEFINED DEFAULT 'pending'::fine_status,
  description text,
  waived_reason text,
  waived_by bigint,
  payment_date date,
  payment_method character varying,
  payment_reference character varying,
  collected_by bigint,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT fines_pkey PRIMARY KEY (fine_id),
  CONSTRAINT fines_waived_by_fkey FOREIGN KEY (waived_by) REFERENCES public.staff(staff_id),
  CONSTRAINT fines_collected_by_fkey FOREIGN KEY (collected_by) REFERENCES public.staff(staff_id),
  CONSTRAINT fines_damage_id_fkey FOREIGN KEY (damage_id) REFERENCES public.damages(damage_id),
  CONSTRAINT fines_member_id_fkey FOREIGN KEY (member_id) REFERENCES public.members(member_id),
  CONSTRAINT fines_loan_id_fkey FOREIGN KEY (loan_id) REFERENCES public.loans(loan_id)
);
CREATE TABLE public.loans (
  loan_id bigint NOT NULL DEFAULT nextval('loans_loan_id_seq'::regclass),
  copy_id bigint NOT NULL,
  member_id bigint NOT NULL,
  loan_date date NOT NULL DEFAULT CURRENT_DATE,
  due_date date NOT NULL DEFAULT (CURRENT_DATE + '14 days'::interval),
  return_date date,
  actual_return_date timestamp with time zone,
  loan_status USER-DEFINED DEFAULT 'active'::loan_status,
  renewal_count integer DEFAULT 0 CHECK (renewal_count >= 0),
  max_renewals integer DEFAULT 2 CHECK (max_renewals >= 0),
  checkout_condition USER-DEFINED,
  return_condition USER-DEFINED,
  loan_notes text,
  issued_by bigint,
  returned_to bigint,
  auto_renewed boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT loans_pkey PRIMARY KEY (loan_id),
  CONSTRAINT loans_returned_to_fkey FOREIGN KEY (returned_to) REFERENCES public.staff(staff_id),
  CONSTRAINT loans_issued_by_fkey FOREIGN KEY (issued_by) REFERENCES public.staff(staff_id),
  CONSTRAINT loans_copy_id_fkey FOREIGN KEY (copy_id) REFERENCES public.book_copies(copy_id),
  CONSTRAINT loans_member_id_fkey FOREIGN KEY (member_id) REFERENCES public.members(member_id)
);
CREATE TABLE public.members (
  member_id bigint NOT NULL DEFAULT nextval('members_member_id_seq'::regclass),
  member_number character varying NOT NULL UNIQUE,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  email character varying UNIQUE,
  phone character varying,
  address text,
  date_of_birth date CHECK (date_of_birth IS NULL OR date_of_birth <= (CURRENT_DATE - '1 year'::interval)),
  membership_date date NOT NULL DEFAULT CURRENT_DATE,
  membership_expiry date NOT NULL DEFAULT (CURRENT_DATE + '1 year'::interval),
  membership_status USER-DEFINED DEFAULT 'active'::membership_status,
  max_books_allowed integer DEFAULT 5 CHECK (max_books_allowed > 0),
  max_renewal_allowed integer DEFAULT 2 CHECK (max_renewal_allowed >= 0),
  member_notes text,
  emergency_contact_name character varying,
  emergency_contact_phone character varying,
  photo_url text,
  total_fines_paid numeric DEFAULT 0.00 CHECK (total_fines_paid >= 0::numeric),
  total_books_borrowed integer DEFAULT 0 CHECK (total_books_borrowed >= 0),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by bigint,
  CONSTRAINT members_pkey PRIMARY KEY (member_id),
  CONSTRAINT members_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.staff(staff_id)
);
CREATE TABLE public.reservations (
  reservation_id bigint NOT NULL DEFAULT nextval('reservations_reservation_id_seq'::regclass),
  book_id bigint NOT NULL,
  member_id bigint NOT NULL,
  reservation_date date NOT NULL DEFAULT CURRENT_DATE,
  expiry_date date NOT NULL DEFAULT (CURRENT_DATE + '7 days'::interval),
  status USER-DEFINED DEFAULT 'active'::reservation_status,
  priority_order integer,
  notified_date date,
  notification_method character varying,
  fulfilled_by_copy_id bigint,
  fulfilled_date date,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reservations_pkey PRIMARY KEY (reservation_id),
  CONSTRAINT reservations_member_id_fkey FOREIGN KEY (member_id) REFERENCES public.members(member_id),
  CONSTRAINT reservations_fulfilled_by_copy_id_fkey FOREIGN KEY (fulfilled_by_copy_id) REFERENCES public.book_copies(copy_id),
  CONSTRAINT reservations_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);
CREATE TABLE public.staff (
  staff_id bigint NOT NULL DEFAULT nextval('staff_staff_id_seq'::regclass),
  staff_number character varying NOT NULL UNIQUE,
  username character varying NOT NULL UNIQUE,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  email character varying NOT NULL UNIQUE,
  role character varying DEFAULT 'librarian'::character varying CHECK (role::text = ANY (ARRAY['admin'::character varying, 'librarian'::character varying, 'assistant'::character varying]::text[])),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT staff_pkey PRIMARY KEY (staff_id)
);
CREATE TABLE public.system_config (
  config_key character varying NOT NULL,
  config_value text NOT NULL,
  description text,
  data_type character varying DEFAULT 'string'::character varying CHECK (data_type::text = ANY (ARRAY['string'::character varying, 'integer'::character varying, 'decimal'::character varying, 'boolean'::character varying, 'json'::character varying]::text[])),
  is_editable boolean DEFAULT true,
  updated_at timestamp with time zone DEFAULT now(),
  updated_by bigint,
  CONSTRAINT system_config_pkey PRIMARY KEY (config_key),
  CONSTRAINT system_config_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.staff(staff_id)
);